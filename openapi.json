{
  "openapi": "3.0.0",
  "info": {
    "title": "systolics API",
    "version": "1.0.0",
    "description": "API documentation for systolics"
  },
  "servers": [
    {
      "url": "https://api.systolics.de/v01",
      "description": "Platform API"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-systolics-apikey",
        "description": "API Key required to obtain a JWT token."
      },
      "accessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT authorization header using the Bearer scheme."
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation successful"
          },
          "data": {
            "description": "Flexible data container that can be either an object or an array.",
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "array"
              }
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Depicts a string constant for the error type",
            "example": "GENERAL_ERROR"
          },
          "reqId": {
            "type": "string",
            "description": "Request ID for tracing the error",
            "example": "4a900ef0-dfbe-11ef-add6-bf069a8357f6"
          },
          "msg": {
            "type": "string",
            "description": "Error message",
            "example": "An error occurred."
          }
        }
      },
      "AuthErrorMessage": {
        "type": "object",
        "properties": {
          "auth": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Access not allowed."
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Request operation result key",
            "example": "SUCCESS"
          },
          "token": {
            "type": "string",
            "description": "JWT token for accessing secured endpoints of the affiliated organization.",
            "example": "eyJhbGciOiJIUzI1NiIsIn..."
          }
        }
      }
    }
  },
  "paths": {
    "/auth/scopes": {
      "get": {
        "summary": "Obtain Access Token for a service user via its API Key",
        "description": "Use an API Key to obtain a JWT token for authentication to protected organization resources",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "accessToken": []
          }
        ],
        "x-token-required-scopes": [
          "*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "platform",
                "partner",
                "org"
              ]
            },
            "description": "Description of the type of organization for which scopes are requested"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated, returns JWT token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "The scope as the string representation of the requested permission level"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the token"
                    },
                    "description": {
                      "type": "string",
                      "description": "The full-text representation of the access permission"
                    },
                    "uiCategory": {
                      "type": "string",
                      "description": "The category which for the scope"
                    },
                    "flagAssignableForBpOrg": {
                      "type": "boolean",
                      "description": "Flag identifying when scopes are requested that a BP can be assigned for by a organization (impersonation)"
                    },
                    "flagCanBeAssignedToApiKey": {
                      "type": "boolean",
                      "description": "Flag identifying when scopes are requested that a BP can be assigned for by a organization (impersonation)7"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error happened during the request of the scopes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/services/token": {
      "get": {
        "summary": "Obtain JWT Token using API Key",
        "description": "Use an API Key to obtain a JWT token for authentication.",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated, returns JWT token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/bp/{orgId}/apikey": {
      "get": {
        "summary": "List the existing API Keys for a business partner organization",
        "description": "List all API Keys for a business partner organization, including their scopes and validity information",
        "tags": [
          "Partner - API Keys"
        ],
        "security": [
          {
            "accessToken": []
          }
        ],
        "x-token-required-scopes": [
          "api-mgmt-keys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the business partner organization for which the API keys are requested"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated, returns JWT token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "SUCCESS"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiKeyPrefix": {
                            "type": "string",
                            "description": "Unique identifier prefix for the API key.",
                            "example": "bp-76015df0df5511efb34539daeecdeef1"
                          },
                          "apiKeyMasked": {
                            "type": "string",
                            "description": "Masked API key for display purposes.",
                            "example": "******iV6m"
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the API key was created.",
                            "example": "2025-01-30T21:59:21.679Z"
                          },
                          "activeEndpoints": {
                            "type": "array",
                            "description": "List of active endpoints associated with this API key.",
                            "items": {
                              "type": "string"
                            },
                            "example": []
                          },
                          "scopes": {
                            "type": "array",
                            "description": "List of access scopes assigned to this API key.",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "data-dwh-data-read"
                            ]
                          },
                          "dateChanged": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Timestamp when the API key was last modified.",
                            "example": "2025-01-30T22:06:43.815Z"
                          },
                          "userIdChanged": {
                            "type": "string",
                            "nullable": true,
                            "description": "User ID that last changed the API key, if applicable.",
                            "example": null
                          },
                          "dateInvalidated": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Timestamp when the API key was invalidated.",
                            "example": "2025-01-30T22:10:45.476Z"
                          },
                          "userIdInvalidated": {
                            "type": "string",
                            "nullable": true,
                            "description": "User ID that invalidated the API key.",
                            "example": "668c5551fb7bbe6934d0f23f"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error happened during the request of the scopes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new API key",
        "description": "Generates a new API key for the specified business partner (BP). The request must be authenticated using a Bearer token.",
        "tags": [
          "Partner - API Keys"
        ],
        "security": [
          {
            "accessToken": []
          }
        ],
        "x-token-required-scopes": [
          "api-mgmt-keys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The business partner ID for which the API key is being created."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of scopes assigned to the API key.",
                    "example": [
                      "data-dwh-data-read",
                      "partner-owner"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "SUCCESS"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "apiKeyPrefix": {
                          "type": "string",
                          "description": "Unique identifier prefix for the API key.",
                          "example": "bp-53ab3520df5811ef83e9479208803006"
                        },
                        "apiKeyMasked": {
                          "type": "string",
                          "description": "Masked API key for display purposes.",
                          "example": "******XUWW"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the API key was created.",
                          "example": "2025-01-30T22:19:52.562Z"
                        },
                        "activeEndpoints": {
                          "type": "array",
                          "description": "List of active endpoints associated with this API key.",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "scopes": {
                          "type": "array",
                          "description": "List of access scopes assigned to this API key.",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "apiKeyClear": {
                          "type": "string",
                          "description": "The full API key in plain text (shown only once upon creation).",
                          "example": "bp-53ab3520df5811ef83e9479208803006.BekBSEgkQK8FCO9t6qBqZ8h95KUddRoi0e6OceMHr8lMkniV"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bp/{orgId}/apikey/{apiKeyPrefix}": {
      "put": {
        "summary": "Update API Key Scopes",
        "description": "Updates the list of scopes assigned to an existing API key.",
        "tags": [
          "Partner - API Keys"
        ],
        "security": [
          {
            "accessToken": []
          }
        ],
        "x-token-required-scopes": [
          "api-mgmt-keys"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The business partner ID associated with the API key."
          },
          {
            "in": "path",
            "name": "apiKeyPrefix",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier prefix for the API key to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The new list of scopes to assign to the API key.",
                    "example": [
                      "data-dwh-data-read"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated API key scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "SUCCESS"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "apiKeyPrefix": {
                          "type": "string",
                          "description": "The unique identifier prefix for the updated API key.",
                          "example": "bp-76015df0df5511efb34539daeecdeef1"
                        },
                        "scopes": {
                          "type": "array",
                          "description": "The updated list of scopes assigned to the API key.",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "data-dwh-data-read"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The specified API key does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Invalidate (Delete) an API Key",
        "description": "Marks an API key as invalid, preventing further use.",
        "tags": [
          "Partner - API Keys"
        ],
        "security": [
          {
            "accessToken": []
          }
        ],
        "x-token-required-scopes": [
          "api-mgmt-keys-inactivate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The business partner ID associated with the API key."
          },
          {
            "in": "path",
            "name": "apiKeyPrefix",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier prefix for the API key to be invalidated."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully invalidated the API key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "example": "SUCCESS"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The specified API key does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}